# Generated by Django 4.2 on 2023-07-29 22:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Article',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('content', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Booking',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('seat_numbers', models.CharField(max_length=100)),
                ('booking_date', models.DateField(null=True)),
                ('seats_booked', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Bus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bus_number', models.CharField(max_length=20, unique=True)),
                ('capacity', models.PositiveIntegerField()),
                ('model_type', models.CharField(max_length=50)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='complain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('massage', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('license_number', models.CharField(max_length=20)),
                ('date_of_birth', models.DateField()),
                ('contact_number', models.CharField(max_length=20)),
                ('address', models.CharField(max_length=200)),
            ],
        ),
        migrations.CreateModel(
            name='Faqs',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=50)),
                ('answer', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='HomepageText',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('our_history', models.TextField(max_length=1000)),
                ('our_mission', models.TextField(max_length=1000)),
                ('our_vission', models.TextField(max_length=1000)),
            ],
        ),
        migrations.CreateModel(
            name='OurService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_title', models.CharField(max_length=100)),
                ('service_description', models.TextField()),
                ('service_icon', models.CharField(max_length=15)),
            ],
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateTimeField(auto_now_add=True)),
                ('status', models.CharField(max_length=20)),
                ('transaction_id', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='PopulerRoute',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('distance', models.CharField(max_length=12)),
                ('duration', models.CharField(max_length=12)),
                ('route_name', models.CharField(max_length=100)),
                ('transportation_mode', models.CharField(max_length=50)),
                ('cost', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Schedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('city', models.CharField(max_length=12)),
                ('station_name', models.CharField(max_length=12)),
                ('station_state', models.CharField(max_length=12)),
            ],
        ),
        migrations.CreateModel(
            name='WorkingHour',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time', models.TimeField(null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(max_length=500)),
                ('contact_info', models.CharField(max_length=100)),
                ('address', models.CharField(max_length=200)),
                ('date_of_birth', models.DateField()),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddConstraint(
            model_name='station',
            constraint=models.UniqueConstraint(fields=('city', 'station_name'), name='unique_station'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='bus',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BusConnect.bus'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='departure_time',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='BusConnect.workinghour'),
        ),
        migrations.AddField(
            model_name='schedule',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BusConnect.route'),
        ),
        migrations.AddField(
            model_name='route',
            name='destination',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='depatures', to='BusConnect.station'),
        ),
        migrations.AddField(
            model_name='route',
            name='origin',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='origin_city', to='BusConnect.station'),
        ),
        migrations.AddField(
            model_name='populerroute',
            name='route',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BusConnect.route'),
        ),
        migrations.AddField(
            model_name='payment',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='booking_payment', to='BusConnect.schedule'),
        ),
        migrations.AddField(
            model_name='payment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='driver',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='complain',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='complains', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bus',
            name='driver',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='BusConnect.driver'),
        ),
        migrations.AddField(
            model_name='bus',
            name='operating_city',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='BusConnect.station'),
        ),
        migrations.AddField(
            model_name='booking',
            name='Payment',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='BusConnect.payment'),
        ),
        migrations.AddField(
            model_name='booking',
            name='schedule',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookings', to='BusConnect.schedule'),
        ),
        migrations.AddField(
            model_name='booking',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='article',
            name='author',
            field=models.ForeignKey(limit_choices_to={'is_superuser': True}, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='schedule',
            unique_together={('bus', 'route', 'date', 'departure_time')},
        ),
    ]
